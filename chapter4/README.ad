# 참조 이해하기



### 참조 타입(Reference Type)

- 참조 타입은 항상 관리되는 힙(Heap) 메모리 영역에 할당(저장)된다.
- 변수에는 테이터가 저장된 힙의 주소(참조)가 저장된다.
- 참조 타입을 사용할 시 메모리 할당이 발생 되며 모든 타입이 참조 타입일시 성능 저하가 생길 것이다.
- 성능 저하를 막기 위해  단순하고 자주 사용되는 참조 타입을 경량화된 값 타입으로 존재해야한다.

●특징
- 참조 타입의 변수를 다른 변수에 할당하면, 힙 메모리 주소의 참조가 복사된다. 따라서 두 변수는 같은 객체를 참조하게 된다.
- 참조 타입은 메소드에 매개변수로 전달될 때 참조가 전달된다.(참조에 의한 전달). 이는 메소드 내에서 객체의 상태가 변경될 경우원본 객체에도 그 변경사항이 반영된다.

ex
```
class MyClass{
  public int Value{get;set;}
}

MyClass c1 = new MyClass();
c1.Value = 10;

MyClass c2 = c1;
c2.Value = 20;
```
'c1'과 'c2'는 같은 객체를 참조한다. 그렇기에 'c2'의 값이 변경되면 'c1'의 값도 변경된다.



### 값 타입(Value Type)

- 값 타입의 인스턴스는 그 자체가 하나의 필드이다.
- 값 타입은 데이터를 스택(Stack) 메모리에 직접 저장한다.
- 항상 System.ValueType로부터 상속 받는다.

●특징
- 값 타입의 변수를 다른 변수에 할당하면, 해당 값의 복사본이 생성되어 별도의 메모리 공간에 저장된다. 따라서 원본 변수와 복사본은 서로 독립적이다.
- 값 타입은 메소드에 매개변수로 전달될 때도 복사되어 전달된다.(값에 의한 전달)

ex
```
int a =10;
int b =a;
b = 20;
```
'b'는 'a'와 복사본을 가진다. 서로 독립적이다. 이때 'b'의 값을 변경해도 'a'에는 영향이 없다.
